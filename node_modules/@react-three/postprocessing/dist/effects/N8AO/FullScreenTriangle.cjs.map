{"version":3,"file":"FullScreenTriangle.cjs","sources":["../../../src/effects/N8AO/FullScreenTriangle.js"],"sourcesContent":["import * as THREE from 'three'\n\nclass FullScreenTriangleGeometry extends THREE.BufferGeometry {\n  boundingSphere = new THREE.Sphere()\n\n  constructor() {\n    super()\n    this.setAttribute('position', new THREE.BufferAttribute(new Float32Array([-1, -1, 3, -1, -1, 3]), 2))\n    this.setAttribute('uv', new THREE.BufferAttribute(new Float32Array([0, 0, 2, 0, 0, 2]), 2))\n  }\n\n  computeBoundingSphere() {}\n}\n\nconst _geometry = new FullScreenTriangleGeometry()\nconst _camera = new THREE.OrthographicCamera()\n\nexport class FullScreenTriangle {\n  constructor(material) {\n    this._mesh = new THREE.Mesh(_geometry, material)\n    this._mesh.frustumCulled = false\n  }\n\n  render(renderer) {\n    renderer.render(this._mesh, _camera)\n  }\n\n  get material() {\n    return this._mesh.material\n  }\n\n  set material(value) {\n    this._mesh.material = value\n  }\n\n  dispose() {\n    this._mesh.material.dispose()\n    this._mesh.geometry.dispose()\n  }\n}\n"],"names":["THREE"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,MAAM,mCAAmCA,iBAAM,eAAe;AAAA,EAG5D,cAAc;AACZ,UAAO;AAHT,0CAAiB,IAAIA,iBAAM,OAAQ;AAIjC,SAAK,aAAa,YAAY,IAAIA,iBAAM,gBAAgB,IAAI,aAAa,CAAC,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACpG,SAAK,aAAa,MAAM,IAAIA,iBAAM,gBAAgB,IAAI,aAAa,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AAAA,EAC3F;AAAA,EAED,wBAAwB;AAAA,EAAE;AAC5B;AAEA,MAAM,YAAY,IAAI,2BAA4B;AAClD,MAAM,UAAU,IAAIA,iBAAM,mBAAoB;AAEvC,MAAM,mBAAmB;AAAA,EAC9B,YAAY,UAAU;AACpB,SAAK,QAAQ,IAAIA,iBAAM,KAAK,WAAW,QAAQ;AAC/C,SAAK,MAAM,gBAAgB;AAAA,EAC5B;AAAA,EAED,OAAO,UAAU;AACf,aAAS,OAAO,KAAK,OAAO,OAAO;AAAA,EACpC;AAAA,EAED,IAAI,WAAW;AACb,WAAO,KAAK,MAAM;AAAA,EACnB;AAAA,EAED,IAAI,SAAS,OAAO;AAClB,SAAK,MAAM,WAAW;AAAA,EACvB;AAAA,EAED,UAAU;AACR,SAAK,MAAM,SAAS,QAAS;AAC7B,SAAK,MAAM,SAAS,QAAS;AAAA,EAC9B;AACH;;"}