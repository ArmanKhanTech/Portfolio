{"version":3,"file":"Texture.cjs","sources":["../../src/effects/Texture.tsx"],"sourcesContent":["import { TextureEffect } from 'postprocessing'\nimport { Ref, forwardRef, useMemo, useLayoutEffect } from 'react'\nimport { useLoader } from '@react-three/fiber'\nimport { TextureLoader, sRGBEncoding, RepeatWrapping } from 'three'\n\ntype TextureProps = ConstructorParameters<typeof TextureEffect>[0] & {\n  textureSrc: string\n}\n\nexport const Texture = forwardRef<TextureEffect, TextureProps>(function Texture(\n  { textureSrc, texture, ...props }: TextureProps,\n  ref: Ref<TextureEffect>\n) {\n  const t = useLoader(TextureLoader, textureSrc)\n  useLayoutEffect(() => {\n    t.encoding = sRGBEncoding\n    t.wrapS = t.wrapT = RepeatWrapping\n  }, [t])\n  const effect = useMemo(() => new TextureEffect({ ...props, texture: t || texture }), [props, t, texture])\n  return <primitive ref={ref} object={effect} dispose={null} />\n})\n"],"names":["forwardRef","Texture","useLoader","TextureLoader","useLayoutEffect","sRGBEncoding","RepeatWrapping","useMemo","TextureEffect"],"mappings":";;;;;;;AASa,MAAA,UAAUA,MAAAA,WAAwC,SAASC,SACtE,EAAE,YAAY,SAAS,GAAG,MAAM,GAChC,KACA;AACM,QAAA,IAAIC,MAAAA,UAAUC,MAAA,eAAe,UAAU;AAC7CC,QAAAA,gBAAgB,MAAM;AACpB,MAAE,WAAWC;AACX,MAAA,QAAQ,EAAE,QAAQC,MAAAA;AAAAA,EAAA,GACnB,CAAC,CAAC,CAAC;AACN,QAAM,SAASC,MAAAA,QAAQ,MAAM,IAAIC,eAAAA,cAAc,EAAE,GAAG,OAAO,SAAS,KAAK,QAAS,CAAA,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC;AACxG,wCAAQ,aAAU,EAAA,KAAU,QAAQ,QAAQ,SAAS,KAAM,CAAA;AAC7D,CAAC;;"}