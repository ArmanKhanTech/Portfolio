{"version":3,"file":"LUT.cjs","sources":["../../src/effects/LUT.tsx"],"sourcesContent":["import { useThree } from '@react-three/fiber'\nimport { LUT3DEffect, BlendFunction } from 'postprocessing'\nimport React, { forwardRef, Ref, useLayoutEffect, useMemo } from 'react'\nimport type { Texture } from 'three'\n\nexport type LUTProps = {\n  lut: Texture\n  blendFunction?: BlendFunction\n  tetrahedralInterpolation?: boolean\n}\n\nexport const LUT = forwardRef(function LUT(\n  { lut, tetrahedralInterpolation, ...props }: LUTProps,\n  ref: Ref<LUT3DEffect>\n) {\n  const effect = useMemo(() => new LUT3DEffect(lut, props), [lut, props])\n  const invalidate = useThree((state) => state.invalidate)\n\n  useLayoutEffect(() => {\n    if (tetrahedralInterpolation) effect.tetrahedralInterpolation = tetrahedralInterpolation\n    if (lut) effect.lut = lut\n    invalidate()\n  }, [effect, invalidate, lut, tetrahedralInterpolation])\n\n  return <primitive ref={ref} object={effect} dispose={null} />\n})\n"],"names":["forwardRef","LUT","useMemo","LUT3DEffect","useThree","useLayoutEffect"],"mappings":";;;;;;AAWa,MAAA,MAAMA,MAAAA,WAAW,SAASC,KACrC,EAAE,KAAK,0BAA0B,GAAG,MAAM,GAC1C,KACA;AACM,QAAA,SAASC,MAAAA,QAAQ,MAAM,IAAIC,2BAAY,KAAK,KAAK,GAAG,CAAC,KAAK,KAAK,CAAC;AACtE,QAAM,aAAaC,MAAAA,SAAS,CAAC,UAAU,MAAM,UAAU;AAEvDC,QAAAA,gBAAgB,MAAM;AAChB,QAAA;AAA0B,aAAO,2BAA2B;AAC5D,QAAA;AAAK,aAAO,MAAM;AACX;KACV,CAAC,QAAQ,YAAY,KAAK,wBAAwB,CAAC;AAEtD,wCAAQ,aAAU,EAAA,KAAU,QAAQ,QAAQ,SAAS,KAAM,CAAA;AAC7D,CAAC;;"}